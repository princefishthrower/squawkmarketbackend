// package tdameritrade

// import (
// 	"log"
// 	"net/url"

// 	"github.com/gorilla/websocket"
// )

// type StreamerInfo struct {
// 	StreamerBinaryUrl 	string `json:"streamerBinaryUrl"`
// 	streamerSocketUrl 	string `json:"streamerSocketUrl"`
// 	Token 		string `json:"token"`
// 	TokenTimestamp 	int `json:"tokenTimestamp"`
// 	UserGroup 	string `json:"userGroup"`
// 	AccessLevel 	string `json:"accessLevel"`
// 	ACL 		string `json:"acl"`
// 	AppID 		string `json:"appId"`
// }

// type Quotes struct {
// 	IsNyseDelayed 	bool `json:"isNyseDelayed"`
// 	IsNasdaqDelayed bool `json:"isNasdaqDelayed"`
// 	IsOpraDelayed 	bool `json:"isOpraDelayed"`
// 	IsAmexDelayed 	bool `json:"isAmexDelayed"`
// 	IsCmeDelayed 	bool `json:"isCmeDelayed"`
// 	IsIceDelayed 	bool `json:"isIceDelayed"`
// 	IsForexDelayed 	bool `json:"isForexDelayed"`
// }

// type Key struct {
// 	Key string `json:"key"`
// }

// type StreamerSubscriptionKeys struct {
// 	Keys []Key `json:"keys"`
// }

// type ExchangeAgreements struct {
// 	NasdaqExchangeAgreement string `json:"NASDAQ_EXCHANGE_AGREEMENT"`
// 	NyseExchangeAgreement string `json:"NYSE_EXCHANGE_AGREEMENT"`
// 	OpraExchangeAgreement string `json:"OPRA_EXCHANGE_AGREEMENT"`
// }

// type Authorizations struct {
// 	Apex bool `json:"apex"`
// 	LevelTwoQuotes bool `json:"levelTwoQuotes"`
// 	StockTrading bool `json:"stockTrading"`
// 	MarginTrading bool `json:"marginTrading"`
// 	StreamingNews bool `json:"streamingNews"`
// 	OptionTradingLevel string `json:"optionTradingLevel"`
// 	ScottradeAccount bool `json:"scottradeAccount"`
// 	AutoPositionEffect bool `json:"autoPositionEffect"`
// }

// type Account struct {
// 	AccountId string `json:"accountId"`
// 	DisplayName string `json:"displayName"`
// 	AccountCdDomainId string `json:"accountCdDomainId"`
// 	Company string `json:"company"`
// 	Segment string `json:"segment"`
// 	Acl string `json:"acl"`
// 	Authorizations Authorizations `json:"authorizations"`
// }

// type UserPrinciples struct {
// 	UserId 		string `json:"userId"`
// 	UserCdDomainId 	string `json:"userCdDomainId"`
// 	PrimaryAccountId string `json:"primaryAccountId"`
// 	LastLoginTime 	string `json:"lastLoginTime"`
// 	TokenExpirationTime string `json:"tokenExpirationTime"`
// 	LoginTime 	string `json:"loginTime"`
// 	AccessLevel 	string `json:"accessLevel"`
// 	StalePassword 	bool `json:"stalePassword"`
// 	StreamerInfo 	StreamerInfo `json:"streamerInfo"`
// 	ProfessionalStatus string `json:"professionalStatus"`
// 	Quotes Quotes `json:"quotes"`
// 	StreamerSubscriptionKeys StreamerSubscriptionKeys `json:"streamerSubscriptionKeys"`
// 	ExchangeAgreements ExchangeAgreements `json:"exchangeAgreements"`
// 	Accounts []Account `json:"accounts"`
// }

// type WebSocketRequest struct {
// 	Service    string `json:"service"`
// 	Command    string `json:"command"`
// 	RequestID  int    `json:"requestid"`
// 	Account    string `json:"account"`
// 	Source     string `json:"source"`
// 	Parameters struct {
// 		Credential string `json:"credential"`
// 		Token      string `json:"token"`
// 		Version    string `json:"version"`
// 	} `json:"parameters"`
// }

// type WebSocketRequests struct {
// 	Requests []WebSocketRequest `json:"requests"`
// }

// func GetLatestValueBySymbol(symbol string) {

// 	// create websocket connection

// 	// send quote request with passed symbol

// }

// func RefreshStreamToken() {

// }

// func CreateTDAmeritradeSocket(streamerSocketUrl string) (*websocket.Conn, error) {
// 	addr := streamerSocketUrl
// 	url := url.URL{Scheme: "wss", Host: addr, Path: "/ws"}
// 	log.Printf("connecting to %s", url.String())

// 	websocketConn, _, err := websocket.DefaultDialer.Dial(url.String(), nil)

// 	if err != nil {
// 		log.Fatal("dial:", err)
// 		return nil, err
// 	}

// 	return websocketConn, nil
// }

// func Login(conn websocket.Conn, userPrinciples UserPrinciples) error {

// 	credentials := Credentials{
// 		userid: userPrinciples.Accounts[0].accountId,
// 		token: userPrinciples.StreamerInfo.token,
// 		company: userPrinciples.Accounts[0].company,
// 		segment: userPrinciples.Accounts[0].segment,
// 		cddomain: userPrinciples.Accounts[0].accountCdDomainId,
// 		usergroup: userPrinciples.StreamerInfo.userGroup,
// 		accesslevel: userPrinciples.StreamerInfo.accessLevel,
// 		authorized: 'Y',
// 		timestamp: tokenTimeStampAsMs,
// 		appid: userPrinciples.StreamerInfo.appId,
// 		acl: userPrinciples.StreamerInfo.acl,
// 	  }

// 	webSocketRequest := WebSocketRequest{
// 		Requests: []WebSocketRequest{
// 			Service: "ADMIN",
// 			Command: "LOGIN",
// 			RequestID: 0,
// 			Account: userPrinciples.Accounts[0].AccountID,
// 			Source: userPrinciples.StreamerInfo.AppID,
// 			Parameters: {
// 				Credential: jsonToQueryString(credentials),
// 			},

// 		},
// 	}

// 	err := conn.WriteMessage(websocket.TextMessage, webSocketRequest)
// 	if err != nil {
// 		return err
// 	}

// 	return nil
// }
